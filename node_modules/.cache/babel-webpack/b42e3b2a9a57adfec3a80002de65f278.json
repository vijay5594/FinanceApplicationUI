{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nimport * as i2 from \"@ionic/angular\";\nexport let AppUpdatorService = /*#__PURE__*/(() => {\n  class AppUpdatorService {\n    constructor(swUpdate, toastController) {\n      this.swUpdate = swUpdate;\n      this.toastController = toastController;\n\n      this.checkPWAUpdate = () => {\n        this.swUpdate.available.subscribe(res => __awaiter(this, void 0, void 0, function* () {\n          this.showUpdateToast();\n        }));\n        this.swUpdate.checkForUpdate();\n        setInterval(() => {\n          this.swUpdate.checkForUpdate();\n        }, 15 * 60 * 1000);\n      };\n\n      this.showUpdateToast = () => __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          message: 'App update is available!',\n          position: 'bottom',\n          animated: true,\n          color: 'primary',\n          cssClass: 'app-update-toast',\n          buttons: [{\n            role: 'cancel',\n            text: 'Reload'\n          }]\n        });\n        yield toast.present();\n        toast.onDidDismiss().then(() => this.swUpdate.activateUpdate()).then(() => window.location.reload());\n      });\n\n      this.checkIfUpdateExist = () => {\n        this.swUpdate.available.subscribe(res => __awaiter(this, void 0, void 0, function* () {\n          this.showUpdateToast();\n        }));\n        this.swUpdate.checkForUpdate();\n      };\n    }\n\n  }\n\n  AppUpdatorService.ɵfac = function AppUpdatorService_Factory(t) {\n    return new (t || AppUpdatorService)(i0.ɵɵinject(i1.SwUpdate), i0.ɵɵinject(i2.ToastController));\n  };\n\n  AppUpdatorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppUpdatorService,\n    factory: AppUpdatorService.ɵfac,\n    providedIn: 'root'\n  });\n  return AppUpdatorService;\n})();","map":null,"metadata":{},"sourceType":"module"}