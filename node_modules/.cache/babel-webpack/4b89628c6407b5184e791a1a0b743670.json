{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n      this.ProductQualityApi = '';\n      this.ProductApi = 'Product';\n      this.FileApi = 'Fileupload';\n      this.CustomerApi = 'Customer';\n\n      this.getCustomerApiUrl = endpoint => {\n        return `${environment.baseURL}/${this.CustomerApi}/${endpoint}`;\n      };\n\n      this.getProductApiUrl = endpoint => {\n        return `${environment.baseURL}/${this.ProductQualityApi}/${endpoint}`;\n      };\n\n      this.FileApiUrl = endpoint => {\n        return `${environment.baseURL}/${this.FileApi}/${endpoint}`;\n      }; // getProductApi = (endpoint: string) => {\n      //   return `${environment.baseURL}/${this.ProductApi}/${endpoint}`;\n      // }\n\n\n      this.getUserApiUrl = endpoint => {\n        return `${environment.baseURL}/${this.ProductApi}/${endpoint}`;\n      };\n\n      this.insertEntity = params => {\n        const url = this.getUserApiUrl('AddNewProduct');\n        return this.http.post(url, params);\n      };\n\n      this.insertProduct = params => {\n        const url = this.getUserApiUrl('AddNewProduct');\n        return this.http.post(url, params);\n      };\n\n      this.updateProduct = params => {\n        const url = this.getUserApiUrl('UpdateProduct');\n        return this.http.put(url, params);\n      };\n\n      this.deleteProduct = params => {\n        const url = this.getCustomerApiUrl('DeleteProduct?productId=');\n        return this.http.delete(url + params);\n      };\n\n      this.fileUpload = params => {\n        const url = this.FileApiUrl('Upload');\n        return this.http.post(url, params);\n      };\n\n      this.doLogin = params => {\n        const url = this.getUserApiUrl('login');\n        return this.http.post(url, params);\n      };\n\n      this.insertCustomer = params => {\n        const url = this.getCustomerApiUrl('AddNewCustomer');\n        return this.http.post(url, params);\n      };\n\n      this.updateCustomer = params => {\n        const url = this.getCustomerApiUrl('UpdateCustomer');\n        return this.http.put(url, params);\n      };\n\n      this.deleteCustomer = params => {\n        const url = this.getCustomerApiUrl('DeleteCustomer?customerId=');\n        return this.http.delete(url + params);\n      };\n\n      this.logout = () => {\n        localStorage.removeItem('userId');\n        localStorage.removeItem('isSuperUser');\n        localStorage.removeItem('workStation');\n      }; // insertEntity = (params: any): Observable<any> => {\n      //   const url = this.getProductApiUrl('AddNewProduct');\n      //   return this.http.post(url, params);\n      // }\n\n\n      this.updateEntity = params => {\n        const url = this.getProductApiUrl('Update');\n        return this.http.post(url, params);\n      };\n\n      this.loadRecentSerialNo = user => {\n        const endpoint = `GetMaxCount?user=${user}`;\n        const url = this.getProductApiUrl(endpoint);\n        return this.http.get(url);\n      };\n\n      this.loadAllEntity = params => {\n        const url = this.getProductApiUrl('FilteredItems');\n        return this.http.post(url, params);\n      };\n\n      this.loadAllPREntity = params => {\n        const url = this.getProductApiUrl('GetPassingRate');\n        return this.http.post(url, params);\n      };\n\n      this.getExcelReport = params => {\n        const url = this.getProductApiUrl('GenerateExcel');\n        return this.http.post(url, params, {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/octet-stream',\n            'Accept': 'application/octet-stream'\n          }),\n          observe: 'response',\n          responseType: 'arraybuffer'\n        });\n      };\n\n      this.getPassingRateExcelReport = params => {\n        const url = this.getProductApiUrl('GetPassingRateExcel');\n        return this.http.post(url, params, {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/octet-stream',\n            'Accept': 'application/octet-stream'\n          }),\n          observe: 'response',\n          responseType: 'arraybuffer'\n        });\n      };\n    }\n\n    getProductDetails() {\n      const url = this.getUserApiUrl('Allproducts');\n      return this.http.get(url);\n    }\n\n    getCustomerDetails() {\n      const url = this.getCustomerApiUrl('AllCustomers');\n      return this.http.get(url);\n    }\n\n  }\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}